name: Generate Test Cases

on:
  workflow_dispatch:
  push:
    branches:
      - develop

permissions:
  contents: write
  models: read

jobs:
  generate-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Generate Tests
      id: generate_tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ ! -f "user_stories_database.json" ]; then
          echo "❌ Error: user_stories_database.json not found"
          exit 1
        fi

        STORIES=$(cat user_stories_database.json)
        EXISTING_TESTS=""
        [ -f "GHFollowersTests/GeneratedUserStoryTests.swift" ] && EXISTING_TESTS=$(cat GHFollowersTests/GeneratedUserStoryTests.swift)

        cat > prompt.txt << 'EOF'
        Generate a single Swift test file GeneratedUserStoryTests.swift for GHFollowers iOS app using Swift Testing.
        Match exact structure/patterns from GHFollowersTests.swift.
        Requirements:
        - File header: // GeneratedUserStoryTests.swift\n// GHFollowersTests\n// AUTO-GENERATED on $(date +%Y-%m-%d)\n// Copyright © 2025 Chhorng. All rights reserved.
        - Imports: Testing, UIKit, @testable GHFollowers
        - Use @MainActor, @Test annotations
        - Match comment format, assertion patterns, UI setup
        - Output only raw Swift code
        User stories:
        EOF
        cat user_stories_database.json >> prompt.txt
        [ -f "GHFollowersTests/GeneratedUserStoryTests.swift" ] && echo "\nExisting tests:\n$(cat GHFollowersTests/GeneratedUserStoryTests.swift)" >> prompt.txt
        echo "\nReference patterns:\n$(cat GHFollowersTests/GHFollowersTests.swift)" >> prompt.txt

        PROMPT=$(cat prompt.txt)
        ESCAPED_PROMPT=$(echo "$PROMPT" | jq -Rs .)
        RAW_RESPONSE=$(curl -s "https://models.github.ai/inference/chat/completions" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -d "{\"model\": \"openai/gpt-4o-mini\", \"messages\": [{\"role\": \"user\", \"content\": $ESCAPED_PROMPT}]}")

        RESPONSE=$(echo "$RAW_RESPONSE" | jq -r '.choices[0].message.content' 2>/dev/null || echo "$RAW_RESPONSE")
        mkdir -p GHFollowersTests
        echo "$RESPONSE" | sed 's/```swift//g; s/```//g; /^Here is/d; /^Below is/d; /^Generated.*test files/d' > GHFollowersTests/GeneratedUserStoryTests.swift
        rm -f prompt.txt

        if [ -s GHFollowersTests/GeneratedUserStoryTests.swift ] && head -n 1 GHFollowersTests/GeneratedUserStoryTests.swift | grep -q "^//"; then
          echo "✅ Test file generated"
          echo "file_generated=true" >> $GITHUB_OUTPUT
        else
          echo "❌ Test file generation failed"
          echo "file_generated=false" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Commit Changes
      if: steps.generate_tests.outputs.file_generated == 'true'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add GHFollowersTests/GeneratedUserStoryTests.swift
        git commit -m "Update GeneratedUserStoryTests" || echo "No changes"
        git push